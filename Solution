import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Player {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int surfaceN = in.nextInt(); // the number of points used to draw the surface of Mars.
        int lastLandX = -1;
        int lastLandY = -1;
        int platformY = -1;
        int platformStartX = -1;
        int platformFinishX = -1;
        for (int i = 0; i < surfaceN; i++) {
            int landX = in.nextInt(); // X coordinate of a surface point. (0 to 6999)
            int landY = in.nextInt(); // Y coordinate of a surface point. By linking all the points together in a sequential fashion, you form the surface of Mars.
            if(landY == lastLandY){
                platformY=landY;
                platformStartX = lastLandX;
                platformFinishX = landX;
            }
            else{
                lastLandX = landX;
                lastLandY = landY;
            }
        }
        while (true) {
            int X = in.nextInt();
            int Y = in.nextInt();
            int hSpeed = in.nextInt(); // the horizontal speed (in m/s), can be negative.
            int vSpeed = in.nextInt(); // the vertical speed (in m/s), can be negative.
            int fuel = in.nextInt(); // the quantity of remaining fuel in liters.
            int rotate = in.nextInt(); // the rotation angle in degrees (-90 to 90).
            int power = in.nextInt(); // the thrust power (0 to 4).
           
            double speed = Math.sqrt(hSpeed*hSpeed +vSpeed*vSpeed);
            int angleToSlow = (int)Math.toDegrees(Math.asin(hSpeed/speed));
            int angleToAimTarget;
            int angle = (int)Math.toDegrees(Math.acos(3.711 / 4.0));  
            int powerToHover = (vSpeed >= 0) ? 3 : 4;
            if(X < platformStartX)
                angleToAimTarget=-angle;
            else if (X > platformFinishX)
                angleToAimTarget=angle;
            else
                angleToAimTarget=0;
            
            if(!(platformStartX <= X && platformFinishX >= X)){
                if(((X < platformStartX && hSpeed<0)||(platformFinishX < X && hSpeed >0))||(Math.abs(hSpeed)>80))
                    System.out.println(angleToSlow + " 4");
                else if(Math.abs(hSpeed) < 40)
                    System.out.println(angleToAimTarget + " 4");
                else
                    System.out.println("0 "+ powerToHover);

            }
            else{
                if( Y < platformY + 20)
                    System.out.println("0 3");
                else if (Math.abs(hSpeed) <= 15 && Math.abs(vSpeed) <= 35)
                        System.out.println("0 2");
                    else
                        System.out.println(angleToSlow + " 4");
            }   
        }
    }
}
